{"version":3,"sources":["images/plant_feature.png","images/teapot_01.png","images/teapot_02.png","images/teapot_03.png","components/Home.js","ServerURL.js","components/Header.js","components/Footer.js","components/SignUp.js","components/SignIn.js","components/SignOut.js","components/PlantContainer.js","components/PlantForm.js","components/CreatePlant.js","components/EditPlant.js","components/UserProfile.js","components/Users.js","components/Bookings.js","components/Rating.js","components/PlantInfo.js","components/Quiz1.js","quizService/index.js","components/QuestionBox.js","components/Result.js","components/Quiz.js","components/Quiztest.js","Routes.js","serviceWorker.js","index.js","images/avatars/boy-1.svg","images/avatars/boy.svg","images/avatars/girl-1.svg","images/avatars/girl.svg","images/avatars/man-1.svg","images/avatars/man-2.svg","images/avatars/man-3.svg","images/avatars/man-4.svg","images/avatars/man.svg","images/leaf_dark.png","images/leaf_green.png"],"names":["module","exports","Home","class","src","feature","className","serverURL","path","Header","state","image","user","_handleHover","bind","_handleOut","console","log","this","setState","logo_green","logo","localStorage","getItem","token","axios","method","url","headers","then","response","data","catch","error","images","avatar1","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","max","length","Math","floor","random","profileImg","randomImg","to","onMouseOver","onMouseOut","is_seller","admin","id","width","height","name","Component","Footer","SignUp","email","password","confirm_password","seller","_handleSumbit","_handleInputName","_handleInputEmail","_handleInputPassword","_handleInputPasswordConfirmation","_handleInputSeller","event","preventDefault","post","password_confirmation","results","loginURL","auth","window","setItem","jwt","props","history","push","location","reload","target","value","onSubmit","htmlFor","type","onChange","SignIn","SignOut","removeItem","SERVER_URL","PlantContainer","plants","query","_handleSubmit","_handleInputSearch","fetchPlants","get","result","setTimeout","onInput","Gallery","map","plant","plantpara","key","cloudName","publicId","toLowerCase","indexOf","PlantForm","date_from","date_to","onTextChange","onFileChange","age","status","cost","worth","description","todayButton","selected","selectsStart","startDate","endDate","onDateFromChange","placeholderText","selectsEnd","onDateToChange","buttonLabel","PLANT_API","PLANT_IMAGE_API","CreatePlant","handleChange","handleDateFromChange","handleDateToChange","handleSubmit","handleFileChange","from","file","files","availability","formData","FormData","append","plantImage","res","heading","EditPlant","match","params","UserProfile","isLoaded","r","p","bookings","b","plant_id","Users","users","Bookings","Rating","rating","i","leaf_filled","leaf_outline","PlantInfo","plantInfo","comments","comment","Date","handleChangeStart","handleChangeEnd","_handleSubmitComment","_handleChangeRating","_handleChangeComment","URL","AVAIL","BOOKINGS","COMMENTS","fetchPlantInfo","fetchComments","date","booking","listDate","bookedDates","dateFrom","dateTo","d","setDate","getDate","highlighted","minDate","maxDate","highlightDates","excludeDates","c","moment","updated_at","format","required","user_id","Quiz1","score","index","isgamefinished","quizStart","quizz","question","answers","correct","handleClick","handleClick1","handleClick2","handleClickStart","handleReset","displayPlants","happyPlant","cutePlant","angryPlant","onClick","toFixed","qBank","questionID","n","Promise","resolve","sort","slice","QuestionBox","options","useState","answer","setAnswer","text","Result","playAgain","Quiz","questionBank","responses","getQuestions","quizService","computeAnswer","correctAnswer","ReactDOM","render","document","getElementById","Quiztest","handleResult","isCorrect","prevState","count","inCorrect","plantName2","plantName1","whatPlant","React","Layout","e","option","Routes","exact","component","Boolean","hostname","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.20b3f75f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plant_feature.841213cf.png\";","module.exports = __webpack_public_path__ + \"static/media/teapot_01.64904416.png\";","module.exports = __webpack_public_path__ + \"static/media/teapot_02.8ea4348a.png\";","module.exports = __webpack_public_path__ + \"static/media/teapot_03.b04f7c13.png\";","import React from 'react';\n// import PlantContainer from './PlantContainer';\nimport { Link } from 'react-router-dom';\nimport feature from '../images/plant_feature.png';\nimport '../style/header_art.css';\n\nfunction Home() {\n  return (\n    <div>\n        <h1 class=\"greenify-text\">Greenify</h1>\n        <img src={ feature } className=\"featureImage\" />\n    </div>\n  );\n}\n\nexport default Home;\n","const serverURL = function (path) {\n    return \"http://localhost:3000/\" + path;\n  // return \"https://greenify-your-life.herokuapp.com/\" + path;\n};\n\nexport default serverURL;\n\n// import serverURL from \"../ServerURL\";\n// serverURL(path);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport logo from '../images/leaf_dark.png';\nimport logo_green from '../images/leaf_green.png';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\nimport avatar1 from \"../images/avatars/boy-1.svg\"\nimport avatar2 from \"../images/avatars/boy.svg\"\nimport avatar3 from \"../images/avatars/girl-1.svg\"\nimport avatar4 from \"../images/avatars/girl.svg\"\nimport avatar5 from \"../images/avatars/man-1.svg\"\nimport avatar6 from \"../images/avatars/man-2.svg\"\nimport avatar7 from \"../images/avatars/man-3.svg\"\nimport avatar8 from \"../images/avatars/man-4.svg\"\nimport avatar9 from \"../images/avatars/man.svg\"\n\n// Created this class to test authentication.\n// Only shows all plants if you have logged in, otherwise you are not allowed.\n// this is set through the plants controller in rails, by including: before_action :authenticate_user\nclass Header extends Component {\n  constructor () {\n    super();\n    this.state = {\n      image: \"\",\n      user: \"\"\n    }\n\n    this._handleHover = this._handleHover.bind(this);\n    this._handleOut = this._handleOut.bind(this);\n  }\n\n  _handleHover () {\n    console.log(\"hover\");\n    this.setState({image: logo_green });\n  }\n\n  _handleOut () {\n    console.log(\"out\");\n    this.setState({image: logo });\n  }\n\n  componentDidMount() {\n\n    if(!localStorage.getItem(\"jwt\")) {\n      return;\n    }\n\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    console.log(token);\n\n    axios({method: 'get', url: serverURL(\"/current_user\"), headers: {'Authorization': token }})\n    .then(response => {\n      this.setState({ user: response.data })\n    })\n    .catch(error => console.log('error', error));\n\n  }\n  randomImg () {\n    const images = [ avatar1, avatar2, avatar3, avatar4, avatar5, avatar6, avatar7, avatar8, avatar9 ];\n    const max = images.length;\n    const randomNum = Math.floor(Math.random() * max);\n    return images[randomNum];\n  }\n\n\n  render() {\n    const profileImg = this.randomImg();\n    return (\n      <div className=\"nav\">\n        <Link to={ '/' } className=\"headerTitle\"><h1 onMouseOver={ this._handleHover } onMouseOut={ this._handleOut } >greenify<img src={ logo } className=\"logo nohover\" /><img src={ logo_green } className=\"logo hover\" /></h1></Link>\n        <div className=\"links\">\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/plants\">Plants</Link>\n          { this.state.user.is_seller ? <Link to=\"/plants/new\">Add Plant</Link> : \"\" }\n          <Link to=\"/quiz\">Quiz</Link>\n          { this.state.user.admin ? <Link to=\"/users\">Users</Link> : \"\" }\n          <Link to=\"/Quiz1\">Quiz1</Link>\n\n\n          { localStorage.getItem(\"jwt\") ?\n              <span>\n              <Link to={\"/users/\" + this.state.user.id} >\n                <img className=\"avatar\" src={ profileImg } width=\"50\" height=\"50\" />\n                { this.state.user.name }\n               </Link>\n              <Link to=\"/SignOut\">Sign Out</Link></span>\n              :\n              <span><Link to=\"/SignIn\">Sign In</Link> or\n              <Link to=\"/SignUp\"> Sign Up</Link></span>\n          }\n\n        </div>\n      </div>)\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport \"../style/plant_art.css\";\n\n// Created this class to test authentication.\n// Only shows all plants if you have logged in, otherwise you are not allowed.\n// this is set through the plants controller in rails, by including: before_action :authenticate_user\nclass Footer extends Component {\n  constructor () {\n    super();\n    this.state = {\n\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"footer\">\n      <span>&copy; greenify 2019</span>\n      <div className=\"footerPos\">\n\n        <div class=\"plantContainer\">\n          <div class=\"plant\">\n          \t<div class=\"branch\"></div>\n          \t<div class=\"branch\"></div>\n          \t<div class=\"branch\"></div>\n          \t<div class=\"branch\"></div>\n          \t<div class=\"branch\"></div>\n          \t<div class=\"branch\"></div>\n          </div>\n        </div>\n        </div>\n      </div>)\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\n\n\nclass SignUp extends Component {\n  constructor () {\n    super();\n    this.state = {\n      // Update state values with input field as user makes changes through functions below (_handleInput...)\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      seller: false,\n    }\n\n    // Bind all functions that use 'this'\n    this._handleSumbit = this._handleSumbit.bind(this);\n    this._handleInputName = this._handleInputName.bind(this);\n    this._handleInputEmail = this._handleInputEmail.bind(this);\n    this._handleInputPassword = this._handleInputPassword.bind(this);\n    this._handleInputPasswordConfirmation = this._handleInputPasswordConfirmation.bind(this);\n    this._handleInputSeller = this._handleInputSeller.bind(this);\n  }\n\n  _handleSumbit (event) {\n    event.preventDefault();\n    // AJAX post request to create user.\n    const url = serverURL(\"/api/users\");\n    axios.post(url, {\n      user: {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        password_confirmation: this.state.confirm_password,\n        is_seller: this.state.seller\n      }\n    }).then((results) => {\n      console.log(results);\n      // TODO: After they sign up, logthem in and redirect to home.\n\n        // AJAX post request to create user.\n        const loginURL = serverURL(\"api/user_token\");\n        axios.post(loginURL, {\n          auth: {\n            email: this.state.email,\n            password: this.state.password,\n          }\n        })\n        .then((results) => {\n          console.log(results.data);\n          console.log(window)\n          localStorage.setItem(\"jwt\", results.data.jwt);\n          this.props.history.push(\"/\");\n          window.location.reload();\n        })\n        .catch(error => console.log('error', error));\n    });\n  }\n\n  // Use event value to update state value with text user inputs in field\n  _handleInputName (event) {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  _handleInputEmail (event) {\n    this.setState({\n      email: event.target.value,\n    });\n  }\n\n  _handleInputPassword (event) {\n    this.setState({\n      password: event.target.value,\n    });\n  }\n\n  _handleInputPasswordConfirmation (event) {\n    this.setState({\n      confirm_password: event.target.value,\n    });\n  }\n\n  _handleInputSeller (event) {\n    this.setState({\n      seller: (this.state.seller ? false : true)\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"centerForm\">\n        <form onSubmit={ this._handleSumbit } >\n          <label htmlFor=\"name\">\n            Name:\n            <input type=\"text\" id=\"name\" onChange={ this._handleInputName } />\n          </label>\n\n          <label htmlFor=\"email\">\n            Email:\n            <input type=\"email\" id=\"email\" onChange={ this._handleInputEmail } />\n          </label>\n\n          <label htmlFor=\"password\">\n            Password:\n            <input type=\"password\" id=\"password\" onChange={ this._handleInputPassword } />\n          </label>\n\n          <label htmlFor=\"confirm_password\">\n            Confirm Password:\n            <input type=\"password\" id=\"confirm_password\" onChange={ this._handleInputPasswordConfirmation } />\n          </label>\n\n          <label htmlFor=\"seller\">\n            Seller:\n            <input type=\"checkbox\" id=\"seller\" onChange={ this._handleInputSeller } />\n          </label>\n\n          <input type=\"submit\" value=\"Create User\" />\n        </form>\n      </div>)\n  }\n}\n\nexport default SignUp;\n","import React, { Component } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\n\n\nclass SignIn extends Component {\n  constructor () {\n    super();\n    this.state = {\n      // Update state values with input field as user makes changes through functions below (_handleInput...)\n      name: \"\",\n      email: \"\",\n      password: \"\",\n    }\n\n    // Bind all functions that use 'this'\n    this._handleSumbit = this._handleSumbit.bind(this);\n    this._handleInputEmail = this._handleInputEmail.bind(this);\n    this._handleInputPassword = this._handleInputPassword.bind(this);\n\n  }\n\n  _handleSumbit (event) {\n    event.preventDefault();\n    // AJAX post request to create user.\n    const url = serverURL(\"api/user_token\");\n    axios.post(url, {\n      auth: {\n        email: this.state.email,\n        password: this.state.password,\n      }\n    })\n    .then((results) => {\n      console.log(results.data);\n      console.log(window)\n      localStorage.setItem(\"jwt\", results.data.jwt);\n      this.props.history.push(\"/\");\n      window.location.reload();\n    })\n    .catch(error => console.log('error', error));;\n  }\n\n  _handleInputEmail (event) {\n    this.setState({\n      email: event.target.value,\n    });\n  }\n\n  _handleInputPassword (event) {\n    this.setState({\n      password: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"centerForm\">\n        <form onSubmit={ this._handleSumbit } >\n          <label htmlFor=\"email\">\n            Email:\n            <input type=\"email\" id=\"email\" onChange={ this._handleInputEmail } />\n          </label>\n\n          <label htmlFor=\"password\">\n            Password:\n            <input type=\"password\" id=\"password\" onChange={ this._handleInputPassword } />\n          </label>\n\n          <input type=\"submit\" value=\"Sign In\" />\n        </form>\n      </div>)\n  }\n}\n\nexport default SignIn;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom'\n\nconst SignOut = () => {\n  localStorage.removeItem('jwt');\n  window.location.reload();\n  return <Redirect to='/signin' />\n}\n\nexport default SignOut;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\n\nconst SERVER_URL = serverURL('plants.json');\n\n\nclass PlantContainer extends Component {\n  constructor() {\n      super();\n      this.state={\n        plants : [],\n        query : \"\"\n      };\n\n    this._handleSubmit = this._handleSubmit.bind(this);\n    this._handleInputSearch = this._handleInputSearch.bind(this);\n\n\n\n\n    const fetchPlants =() => {\n      axios.get(SERVER_URL).then((result) => {\n        this.setState({plants: result.data});\n        console.log(this.state.plants);\n        setTimeout(fetchPlants, 40000);\n      });\n    };\n    fetchPlants();\n  }\n\n    _handleSubmit (event) {\n      event.preventDefault();\n      this.setState({query: '' })\n      console.log(\"click\");\n    }\n\n    _handleInputSearch (event) {\n      this.setState({\n      query: event.target.value,})\n      console.log(event.target.value);\n    }\n\n  render(){\n    return(\n      <div className=\"centerForm\">\n        <h2>This is a plant area. See our plants:</h2>\n        <form onSubmit={this._handleSubmit}>\n\n        <label htmlFor=\"query\">\n        <p>Search:</p>\n        <input type=\"search\" id=\"query\" onInput={ this._handleInputSearch } />\n        </label>\n        <input type=\"submit\" value=\"Filter\" />\n        </form>\n\n        <Gallery plants={this.state.plants} query={this.state.query}/>\n      </div>\n    )\n  }\n}\n\n\n\nclass Gallery extends Component {\n  render() {\n    return(\n      <div className=\"allPlantsGrid\">\n        {this.props.plants.map((plant) => {\n\n          const plantpara = <p key={plant.id}>\n             {plant.name}\n             <Link to={ \"/plants/\" + plant.id }>\n             <Image cloudName=\"dto4pzoz6\" publicId={plant.images} width=\"300\" className=\"allPlantsShow\" />\n             </Link>\n           </p>;\n           console.log(plantpara);\n           const query = this.props.query.toLowerCase();\n           const name = plant.name.toLowerCase();\n\n            if (name.indexOf(query) !== -1){\n              return plantpara;\n            }\n       })\n      }\n    </div>\n    )\n  }\n}\n\n\nexport default PlantContainer;\n","import React, {Component} from 'react';\n// use moment.js to deal with formatting dates.\nimport moment from \"moment\";\n// Datepicker allows you to pick dates from a dropdown calendar.\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\n\nclass PlantForm extends Component {\n  constructor(){\n    super();\n    this.state = {\n      date_from: \"\",\n      date_to: \"\"\n    }\n\n  }\n\n\n render() {\n     return (\n       <div className=\"centerForm\">\n           <form onSubmit={this.props.onSubmit}>\n             <label>\n               Name:\n               <input type=\"text\" name=\"name\" value={this.props.plant.name} onChange={this.props.onTextChange} />\n             </label><br/>\n             <label>\n               image:\n                 <input type=\"file\" name=\"file\" onChange={this.props.onFileChange} />\n             </label><br/>\n             <label>\n               Age:\n                 <input type=\"text\" name=\"age\" value={this.props.plant.age} onChange={this.props.onTextChange} />\n             </label><br/>\n             <label>\n               Status:\n                 <input type=\"text\" name=\"status\" value={this.props.plant.status} onChange={this.props.onTextChange} />\n             </label><br/>\n             <label>\n               Cost:\n                 <input type=\"text\" name=\"cost\" value={this.props.plant.cost} onChange={this.props.onTextChange}/>\n             </label><br/>\n             <label>\n               Worth:\n                 <input type=\"text\" name=\"worth\" value={this.props.plant.worth} onChange={this.props.onTextChange}/>\n             </label><br/>\n             <label>\n               Desciption:\n                 <textarea name=\"description\" value={this.props.plant.description} onChange={this.props.onTextChange}/>\n             </label><br/>\n\n             <label>\n              Availability:\n              <div class=\"plantProfileBookingGrid\">\n                <span>\n                  <p>From:</p>\n                  <DatePicker\n                      name= \"date_from\"\n                      todayButton={\"Today\"}\n                      selected={this.props.date_from}\n                      selectsStart\n                      startDate={this.props.date_from}\n                      endDate={this.props.date_to}\n                      onChange={this.props.onDateFromChange}\n                      placeholderText=\"Select a Start Date\"\n                    />\n                  </span>\n                  <span>\n                    <p>To:</p>\n                    <DatePicker\n                        name= \"date_to\"\n                        todayButton={\"Today\"}\n                        selected={this.props.date_to}\n                        selectsEnd\n                        startDate={this.props.date_from}\n                        endDate={this.props.date_to}\n                        onChange={this.props.onDateToChange}\n                        placeholderText=\"Select an End Date\"\n                    />\n                  </span>\n                </div>\n              </label><br />\n\n               <input type=\"submit\" value= {this.props.buttonLabel} />\n             </form>\n         </div>\n     )\n   }\n }\n\n export default PlantForm;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PlantForm from './PlantForm';\nimport serverURL from \"../ServerURL\";\n\nconst PLANT_API = serverURL('plants');\nconst PLANT_IMAGE_API = serverURL('plants/');\n\nclass CreatePlant extends Component {\n  constructor(){\n    super();\n    this.state = {\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleDateFromChange = this.handleDateFromChange.bind(this);\n    this.handleDateToChange = this.handleDateToChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value});\n  }\n\n  handleDateFromChange(event) {\n    console.log(\"from\");\n    this.setState({ from: event});\n  }\n\n  handleDateToChange(event) {\n    this.setState({ to: event});\n  }\n\n  handleFileChange(event) {\n    this.setState({ file: event.target.files[0] });\n  }\n\n  handleSubmit(event) {\n      event.preventDefault();\n\n      //1. Create plant object by collecting different attributes from state.\n      const { name, age, status, cost, worth, description, from, to } = this.state;\n      const plant = {name, age, status, cost, worth, description,\n        availability: {\n          from: this.state.from,\n          to: this.state.to}};\n      console.log(plant);\n      //2. Plant object doesn't have image/file, since file is uploaded as Multipart Form Data request in HTTP **. (read more at https://stackoverflow.com/questions/16958448/what-is-http-multipart-request)\n      //** - Although there is a workaround to encode file in base64 and then use it in json payload. ////However this is not recommended.\n\n      // // to get the token and send it through the header, you need to add \"bearer\" with a space after it at the beginning.\n      const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n\n      //File upload is handled in two step process, since Create Plant is a REST based API, which does not handle file upload directly.\n      // a. first we create new plant object in server without images by calling /POST endpoint.\n      // b. once the plant is created, we updated the plant with /PUT call which is not REST call but actually a multipart form submit which includes file. On server side, this PUT request will get the file content and upload it in Cloudinary and then update the plant object.\n\n      axios({method: 'post', url: PLANT_API, headers: {'Authorization': token}, data: { plant }})\n        .then(result => {\n          const formData = new FormData();\n          formData.append('file', this.state.file);\n            console.log(formData)\n            console.log(this.state.file);\n             const plantImage = PLANT_IMAGE_API + result.data.id + '.json';\n             axios({method: 'put', url: plantImage, headers: {'Authorization': token}, data: formData })\n               .then(res => {\n                 this.props.history.push('/plants');\n               });\n\n          //this.props.history.push(\"/plants\");\n\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n\n  render() {\n    return (\n      <div className=\"centerForm\">\n        <h2> Create New Plant </h2>\n        <PlantForm\n          heading = \"Create New Plant\"\n          onTextChange={this.handleChange}\n          onFileChange={this.handleFileChange}\n          onDateFromChange={this.handleDateFromChange}\n          onDateToChange={this.handleDateToChange}\n          date_from={this.state.from}\n          date_to={this.state.to}\n          onSubmit={this.handleSubmit}\n          buttonLabel = \"Add Plant\"\n          plant={{}} />\n      </div>\n\n    )\n  }\n}\n\n\nexport default CreatePlant;\n","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport PlantForm from './PlantForm';\nimport { Image } from 'cloudinary-react';\nimport serverURL from \"../ServerURL\";\n\n\nconst PLANT_API = serverURL('plants.json');\nconst PLANT_IMAGE_API = serverURL('plants/');\n\n\nclass EditPlant extends Component {\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    plant: {}\n  };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFileChange = this.handleFileChange.bind(this);\n  }\n\n\n  handleChange(event) {\n    this.setState({ plant: {...this.state.plant, [event.target.name]: event.target.value}});\n  }\n\n  handleFileChange(event) {\n    this.setState({ file: event.target.files[0] });\n  }\n\n  handleSubmit(event) {\n      event.preventDefault();\n\n      //1. Create plant object by collecting different attributes from state.\n      const plant = { ...this.state.plant };\n\n      console.log('saving plant', plant);\n\n\n      //2. Plant object doesn't have image/file, since file is uploaded as Multipart Form Data request in HTTP **. (read more at https://stackoverflow.com/questions/16958448/what-is-http-multipart-request)\n      //** - Although there is a workaround to encode file in base64 and then use it in json payload. ////However this is not recommended.\n\n      // // to get the token and send it through the header, you need to add \"bearer\" with a space after it at the beginning.\n      const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n\n      //File upload is handled in two step process, since Create Plant is a REST based API, which does not handle file upload directly.\n      // a. first we create new plant object in server without images by calling /POST endpoint.\n      // b. once the plant is created, we updated the plant with /PUT call which is not REST call but actually a multipart form submit which includes file. On server side, this PUT request will get the file content and upload it in Cloudinary and then update the plant object.\n\n      axios({method: 'patch', url: serverURL(`plants/${plant.id}`), headers: {'Authorization': token}, data: { plant }})\n        .then(result => {\n          const file = new FormData();\n          if(this.state.file)\n            file.append('file', this.state.file);\n\n           axios({method: 'put', url: serverURL(`plants/${plant.id}`), data: file, headers:       {'Authorization': token} })\n             .then(res => {\n               this.props.history.push(`/plants/${plant.id}`);\n             });\n          //this.props.history.push(\"/plants\");\n\n        })\n        .catch(error => {\n          console.log(error);\n        });\n  }\n  componentDidMount() {\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n\n    axios({method: 'get', url: serverURL(`plants/${this.props.match.params.id}`), headers: {'Authorization': token}})\n            .then(result => {\n\n              console.log(result);\n              this.setState ({\n                plant: result.data\n              })\n            });\n        }\n\n\n\n\n    render() {\n\n      return (\n        <div className=\"centerForm\">\n          <h2> Edit form </h2>\n          <Image cloudName=\"dto4pzoz6\" publicId={this.state.plant.images} width=\"300\" />\n\n        <PlantForm\n          onTextChange={this.handleChange}\n          onFileChange={this.handleFileChange}\n          onSubmit={this.handleSubmit}\n          buttonLabel = \"Plant Edited\"\n          plant={ this.state.plant }\n        />\n        </div>\n      )\n    }\n }\n\n\n\n\nexport default EditPlant;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\nimport avatar1 from \"../images/avatars/boy-1.svg\"\nimport avatar2 from \"../images/avatars/boy.svg\"\nimport avatar3 from \"../images/avatars/girl-1.svg\"\nimport avatar4 from \"../images/avatars/girl.svg\"\nimport avatar5 from \"../images/avatars/man-1.svg\"\nimport avatar6 from \"../images/avatars/man-2.svg\"\nimport avatar7 from \"../images/avatars/man-3.svg\"\nimport avatar8 from \"../images/avatars/man-4.svg\"\nimport avatar9 from \"../images/avatars/man.svg\"\n\n// Created this class to test authentication.\n// Only shows all plants if you have logged in, otherwise you are not allowed.\n// this is set through the plants controller in rails, by including: before_action :authenticate_user\nclass UserProfile extends Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      isLoaded: false\n    }\n\n    console.log(this)\n    const url = serverURL(\"/api/users/\" + this.props.match.params.id);\n\n    // to get the token and send it through the header, you need to add \"bearer\" with a space after it at the beginning.\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    const getUser = function () {\n      // make a post request with a header with Auth token sent through. Will only send if logged in, otherwise will cause error.\n      axios.get(url)\n      .then(response => {\n        this.setState({ user: response.data })\n\n      })\n      .then(r => {\n        this.setState({ isLoaded: true })\n      })\n      .catch(error => console.log('error', error));\n    }.bind(this)();\n\n\n\n    this.randomImg = this.randomImg.bind(this);\n\n  }\n\n  randomImg () {\n    const images = [ avatar1, avatar2, avatar3, avatar4, avatar5, avatar6, avatar7, avatar8, avatar9 ];\n    const max = images.length;\n    const randomNum = Math.floor(Math.random() * max);\n    return images[randomNum];\n  }\n\n  render() {\n    const profileImg = this.randomImg();\n    const user = this.state.user;\n    {if (this.state.isLoaded) {\n      console.log(this.state.user);\n      return (\n        <div className=\"userProfile\">\n              <div key={this.state.user.user.id}>\n                <h2>{this.state.user.user.name}</h2>\n                <img src={ profileImg } className=\"profile\" />\n                {this.state.user.user.email}\n                {this.state.user.user.admin}\n                {this.state.user.user.is_seller}\n              </div>\n\n                <h3>Plants:</h3>\n                <div className=\"userAssociationGrid\">\n                {this.state.user.user.plants.map((p) => {\n                  return <p className=\"UserPlantOwn\" key={p.id}>\n                     <Link to={ \"/plants/\" + p.id }>\n                     <Image cloudName=\"dto4pzoz6\" publicId={p.images} width=\"300\" className=\"allPlantsShow\" />\n                     </Link>\n                     <h4>{p.name}</h4>\n                   </p>\n                })}\n                </div>\n\n              <h3>Bookings:</h3>\n              <div className=\"userAssociationGrid\">\n                {this.state.user.user.bookings.map((b) => {\n                  return <p className=\"UserPlantBook\" key={b.id}>\n                     <Link to={ \"/plants/\" + b.plant_id }>\n                     <Image cloudName=\"dto4pzoz6\" publicId={b.plant.images} width=\"300\" className=\"allPlantsShow\" />\n                     </Link>\n\n                     <h4>{b.plant.name}</h4>\n                     {b.from} - {b.to}\n                   </p>\n                })}\n              </div>\n\n        </div>)\n    }\n    else {\n      return <div>loading...</div>\n    }}\n\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\nimport avatar1 from \"../images/avatars/boy-1.svg\"\nimport avatar2 from \"../images/avatars/boy.svg\"\nimport avatar3 from \"../images/avatars/girl-1.svg\"\nimport avatar4 from \"../images/avatars/girl.svg\"\nimport avatar5 from \"../images/avatars/man-1.svg\"\nimport avatar6 from \"../images/avatars/man-2.svg\"\nimport avatar7 from \"../images/avatars/man-3.svg\"\nimport avatar8 from \"../images/avatars/man-4.svg\"\nimport avatar9 from \"../images/avatars/man.svg\"\n\n// Created this class to test authentication.\n// Only shows all plants if you have logged in, otherwise you are not allowed.\n// this is set through the plants controller in rails, by including: before_action :authenticate_user\nclass Users extends Component {\n  constructor () {\n    super();\n    this.state = {\n      users: []\n    }\n\n\n    const url = serverURL(\"api/users\");\n    // to get the token and send it through the header, you need to add \"bearer\" with a space after it at the beginning.\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    const getPlants = function () {\n      // make a post request with a header with Auth token sent through. Will only send if logged in, otherwise will cause error.\n      axios({method: 'get', url: url, headers: {'Authorization': token }})\n      .then(response => {\n        this.setState({ users: response.data })\n      })\n      .catch(error => console.log('error', error));\n    }.bind(this)();\n\n    this.randomImg = this.randomImg.bind(this);\n  }\n\n  randomImg () {\n    const images = [ avatar1, avatar2, avatar3, avatar4, avatar5, avatar6, avatar7, avatar8, avatar9 ];\n    const max = images.length;\n    const randomNum = Math.floor(Math.random() * max);\n    return images[randomNum];\n  }\n\n  render() {\n    return (\n      <div className=\"profileGrid\" >\n      {this.state.users.map((user) => {\n          return(\n            <div key={user.id}>\n              <h2><img src={ this.randomImg() } className=\"profileSmall\" /> <Link to={`/users/${user.id}`}>{user.name}</Link></h2>\n              {user.email}\n              {user.admin}\n              {user.is_seller}\n            </div>\n          )\n        })}\n      </div>)\n  }\n}\n\nexport default Users;\n","import React, {Component} from 'react';\n\n\nclass Bookings extends Component {\n  render() {\n    return (\n\n      <div className=\"bookings\">\n\n      </div>)\n  }\n\n}\n\n\nexport default Bookings;\n","import React, { Component } from 'react';\nimport leaf_filled from '../images/leaf_green.png';\nimport leaf_outline from '../images/leaf_dark.png';\n\nclass Rating extends Component {\n  constructor (props) {\n    super(props);\n  }\n\n  render() {\n\n    const rating = [];\n    for (let i=0; i < this.props.rating; i++) {\n      rating.push(1);\n    }\n    while (rating.length < 5) {\n      rating.push(0);\n    }\n\n    return (\n      <span className=\"commentRating\">\n          {rating.map((r) => {\n            if (r === 1) {\n              return <img className=\"ratingImg\" src={ leaf_filled } />\n            }\n            else if (r === 0) {\n              return <img className=\"ratingImg\" src={ leaf_outline } />\n            }\n          })}\n      </span>\n      )\n  }\n}\n\nexport default Rating;\n","import React, { Component } from 'react';\nimport Rating from './Rating';\nimport axios from 'axios';\nimport { Image } from 'cloudinary-react';\nimport { Link } from 'react-router-dom';\nimport serverURL from \"../ServerURL\";\n// use moment.js to deal with formatting dates.\nimport moment from \"moment\";\n// Datepicker allows you to pick dates from a dropdown calendar.\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nclass PlantInfo extends Component {\nconstructor(props){\n  super(props);\n  this.state= {\n    user: \"\",\n    plantInfo : [],\n    availability : [],\n    bookings: [],\n    comments: [],\n    comment: \"\",\n    rating: \"\",\n    startDate: new Date(),\n    endDate: new Date(),\n  }\n  // Handles the change of the start and end date teh user picks\n  this.handleChangeStart = this.handleChangeStart.bind(this);\n  this.handleChangeEnd = this.handleChangeEnd.bind(this);\n  this._handleSubmit = this._handleSubmit.bind(this);\n  this._handleSubmitComment = this._handleSubmitComment.bind(this);\n  this._handleChangeRating = this._handleChangeRating.bind(this);\n  this._handleChangeComment = this._handleChangeComment.bind(this);\n\n  const plant_id = this.props.match.params.id;\n  const URL = serverURL(\"plants/\" + plant_id + \".json\");\n  const  AVAIL =  serverURL('plants/'+ plant_id +'/availabilities');\n  const  BOOKINGS =  serverURL('plants/'+ plant_id +'/bookings');\n  const  COMMENTS =  serverURL('plants/'+ plant_id +'/comments');\n\n  const fetchPlantInfo =() => {\n    axios.get(URL).then((result) => {\n      this.setState({plantInfo: result.data});\n      console.log(result.data[0]);\n      setTimeout(fetchPlantInfo, 40000);\n    });\n  };\n  fetchPlantInfo();\n  const fetchAva =() => {\n    axios.get(AVAIL).then((result) => {\n    this.setState({availability: result.data});\n    console.log(result.data);\n    // setTimeout(fetchAva, 40000);\n    });\n    };\n  fetchAva();\n  const fetchBookings =() => {\n    axios.get(BOOKINGS).then((result) => {\n    this.setState({ bookings: result.data});\n    });\n    };\n  fetchBookings();\n\n  const fetchComments =() => {\n    axios.get(COMMENTS).then((result) => {\n    this.setState({ comments: result.data});\n    });\n    setTimeout(fetchComments, 4000);\n    };\n  fetchComments();\n}\n  // Handles the change of the start date teh user picks\n  handleChangeStart(date) {\n      this.setState({\n        startDate: date\n      });\n    }\n  // Handles the change of the end date teh user picks\n  handleChangeEnd(date) {\n      this.setState({\n        endDate: date\n      });\n    }\n  _handleSubmit (event) {\n    event.preventDefault();\n    let from = this.state.startDate\n    let to = this.state.endDate\n    console.log(\"from \" + from);\n    console.log(\"to \" + to);\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({method: 'post', url: serverURL(`plants/${ this.props.match.params.id }/bookings`), headers: {'Authorization': token}, data: {\n      booking: {\n        from: from,\n        to: to\n      }\n    }}).then(() => window.location.reload());\n  }\n\n  _handleSubmitComment (event) {\n    event.preventDefault();\n\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n    axios({method: 'post', url: serverURL(`plants/${ this.props.match.params.id }/comments`), headers: {'Authorization': token}, data: {\n      comment: {\n        comment: this.state.comment,\n        rating: this.state.rating,\n      }\n\n    }}).then(() => window.location.reload());\n  }\n\n  _handleChangeComment (event) {\n    this.setState({comment: event.target.value});\n  }\n\n  _handleChangeRating (event) {\n    this.setState({rating: event.target.value});\n  }\n\n  componentDidMount() {\n    if(!localStorage.getItem(\"jwt\")) {\n      return;\n    }\n\n    const token = \"Bearer \" + localStorage.getItem(\"jwt\");\n\n    axios({method: 'get', url: serverURL(\"/current_user\"), headers: {'Authorization': token }})\n    .then(response => {\n      this.setState({ user: response.data })\n      console.log(this.state.user)\n    })\n    .catch(error => console.log('error', error));\n  }\n\n\nrender(){\n  let listDate = [];\n  let startAvailableDate = \"\";\n  let endAvailableDate = \"\";\n  let startDate = this.state.availability.map((p) => {\n        // generate a Date for from and to values.\n        const dateFrom = new Date(p.from);\n        const dateTo = new Date(p.to);\n        // .getDate() returns the day of the month, if it is the 6th of August, it will return 6.\n        // .setDate() sets the date, so by running this instead of d++, we are incrementing the date every loop.\n        // Loop through dates from the start date until the end date, each loop increment the date by 1.\n        // inside loop, push the day into the array.\n        for (var d = dateFrom; d <= dateTo; d.setDate(d.getDate() + 1)) {\n            listDate.push(new Date(d));\n        }\n      });\n      // use this array to populate with all the dates that have already been booked\n      // to do this, filter through all the bookings, then add each date to this list.\n      let bookedDates = [ ];\n      this.state.bookings.map((b) => {\n        // generate a Date for from and to values.\n        const dateFrom = new Date(b.from);\n        const dateTo = new Date(b.to);\n        for (let b = dateFrom; b <= dateTo; b.setDate(b.getDate() + 1)) {\n            bookedDates.push(new Date(b));\n        }\n      })\n      // TODO: filter through dates to make an availableDates list, and apply a style to that.\n      const highlighted = [{ \"bookedDates\": bookedDates }];\n  return(\n    <div>\n      <h1 className=\"plantProfileTitle\">{this.state.plantInfo.name}</h1>\n      <div className=\"plantProfileGrid\">\n        <div className=\"plantProfileImage\">\n          <Image cloudName=\"dto4pzoz6\" publicId={this.state.plantInfo.images} width=\"300\" />\n        </div>\n        <div className=\"plantProfileStats\">\n          <p><span className=\"plantProfileBold\">Age: </span>{this.state.plantInfo.age}</p>\n          <p><span className=\"plantProfileBold\">Cost: </span>${this.state.plantInfo.cost}</p>\n          <p><span className=\"plantProfileBold\">Worth: </span>${this.state.plantInfo.worth}</p>\n          <p><span className=\"plantProfileBold\">Description: </span>{this.state.plantInfo.description}</p>\n        </div>\n        { localStorage.getItem(\"jwt\") ?\n          <div className=\"plantProfileBookingDates\">\n          <h3>Book this plant:</h3>\n          <div class=\"plantProfileBookingGrid\">\n            <span>\n              <p>From:</p>\n              <DatePicker\n                  todayButton={\"Today\"}\n                  selected={this.state.startDate}\n                  selectsStart\n                  startDate={this.state.startDate}\n                  endDate={this.state.endDate}\n                  onChange={this.handleChangeStart}\n                  minDate={ listDate[0] }\n                  maxDate={ listDate[listDate.length - 1] }\n                  highlightDates={ highlighted }\n                  excludeDates={ bookedDates }\n                  placeholderText=\"Select a Start Date\"\n                />\n              </span>\n              <span>\n                <p>To:</p>\n                <DatePicker\n                    todayButton={\"Today\"}\n                    selected={this.state.endDate}\n                    selectsEnd\n                    startDate={this.state.startDate}\n                    endDate={this.state.endDate}\n                    onChange={this.handleChangeEnd}\n                    minDate={ listDate[0] }\n                    maxDate={ listDate[listDate.length - 1] }\n                    highlightDates={ highlighted }\n                    excludeDates={ bookedDates }\n                    placeholderText=\"Select an End Date\"\n                />\n              </span>\n            </div>\n            <form onSubmit={ this._handleSubmit }>\n              <input type=\"submit\" value=\"Book Now\" />\n            </form>\n          </div>\n          : \"\"\n        }\n        </div>\n\n      <div className=\"commentSection\">\n      <h3>Comments</h3>\n        {this.state.comments.map((c) => {\n          return <div className=\"comment\">\n          <p><Rating rating={ c.rating } /> <span className=\"commentTime\">- <Link to={ `/users/${ c.user.id }` }>{ c.user.name }</Link> on { moment(c.updated_at).format(\"LLL\") }</span></p>\n          <p>{ c.comment }</p>\n\n          </div>\n        })}\n        {localStorage.getItem(\"jwt\") ?\n          <div>\n            <h3>Make a comment</h3>\n            <form onSubmit={ this._handleSubmitComment }>\n            Rating:\n              <select onChange={ this._handleChangeRating } required>\n                <option value=\"1\">1</option>\n                <option value=\"2\">2</option>\n                <option value=\"3\">3</option>\n                <option value=\"4\">4</option>\n                <option value=\"5\">5</option>\n              </select>\n\n            Comment:\n              <input type=\"textarea\" onChange={ this._handleChangeComment } required/>\n              <input type=\"submit\" value=\"sumbit\" />\n            </form>\n          </div>\n          : \"\" }\n\n      </div>\n      { this.state.user.id === this.state.plantInfo.user_id ?\n          <div className=\"plantProfileButtonArea\"><Link to={\"/plants/\"+ this.props.match.params.id +\"/edit\"}>Edit Plant</Link></div>\n      : \"\" }\n    </div>\n  )\n}\n}\nexport default PlantInfo;\n","import React, {Component} from 'react';\nimport happyPlant from '../images/teapot_01.png';\nimport cutePlant from '../images/teapot_02.png';\nimport angryPlant from '../images/teapot_03.png';\n\nclass Quiz1 extends Component {\n  constructor() {\n    super();\n    this.state = {\n      score: 0,\n      index: 0,\n      isgamefinished: false,\n      quizStart:false,\n      quizz: [{\n        question: \"The first type of plant to evolve on Earth was?\",\n        answers: [\"Algae\", \"Fern\"],\n        correct: 1\n        },\n        {\n          question: 'How often should I change my plant’s potting mix?',\n          answers: [\"Every Month\", \"In one or two years\"],\n          correct: 2\n        },\n        {\n          question: 'When to water the indoor plants?',\n          answers: [\"Every day\", \"As required\"],\n          correct: 2\n        },\n        {\n          question: \"An extract from which species of succulent is used to produce Tequila?\",\n          answers: [\"Agave\", \"Aloe\"],\n          correct: 1\n        },\n        {\n          question: \"What do plants need to grow and survive?\",\n          answers: [\"Sunlight\", \"Sand\"],\n          correct: 1\n        },\n        {\n          question: \"What is the best way to make sure that a plant grows to its full and healthy height?\",\n          answers: [\"Sing it a song\", \"Water it as required\"],\n          correct: 2\n        },\n        {\n          question: \"Which seed will grow best?\",\n          answers: [\"A seed planted in wet soil\", \"Water planted seed every day\"],\n          correct: 1\n        },\n        {\n          question: \"Which colour light is the most important for plant growth and flowering?\",\n          answers: [\"Red and green\", \"Blue and red\"],\n          correct: 1\n        },\n      ]\n\n    }\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClick1 = this.handleClick1.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.handleClickStart = this.handleClickStart.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.displayPlants = this.displayPlants.bind(this);\n\n  }\n  handleClickStart(){\n    this.setState ({\n      quizStart: true\n    });\n  }\n  handleClick(id) {\n\n    console.log('clicked', id);\n    if (this.state.quizz[this.state.index].correct === id) {\n      this.setState({\n        score: this.state.score+1\n      })\n    }\n\n    if (this.state.quizz.length-1 <= this.state.index){\n     this.setState({\n       isgamefinished: true\n     })\n     return;\n    }\n\n\n    this.setState({\n        index: this.state.index+1\n      }\n    );\n  }\n\n  handleClick1() {\n    this.handleClick(1);\n  }\n\n  handleClick2() {\n    this.handleClick(2);\n  }\n  handleReset() {\n    console.log(\"clicked\");\n      this.setState({\n        index: 0,\n        score: 0,\n        isgamefinished: false,\n        quizStart:false,\n\n    });\n  }\n\n  displayPlants (score) {\n    if (score > 80) {\n      return happyPlant\n    }\n    else if (score > 35) {\n      return cutePlant\n    }\n    else {\n       return angryPlant\n    }\n  }\n\n\n  render () {\n    return (\n      <div className=\"backgroundimg\">\n        <h1 className=\"title\"> Quizz about Plants </h1>\n        <div className= {this.state.quizStart ? 'hidden quizEndDiv': 'quizEndDiv'}  >\n          <h2 className=\"subtitle\">Do you have the green thumbs and know-how to ace this quiz on plants and flowers? Challenge yourself to get 100%</h2>\n          <button className=\"answerBtn\" onClick ={this.handleClickStart}>Start the Quiz</button>\n        </div>\n\n        <div className={this.state.isgamefinished || !this.state.quizStart? 'hidden' : ''}>\n            <h3 className=\"subtitle\">{this.state.quizz[this.state.index].question}</h3>\n            <button className=\"answerBtn\" onClick ={ this.handleClick1 }>\n                {this.state.quizz[this.state.index].answers[0]}\n            </button><br/><br/>\n            <button className=\"answerBtn\" onClick ={ this.handleClick2 }>\n              {this.state.quizz[this.state.index].answers[1]}\n            </button>\n        </div>\n        <div className={this.state.isgamefinished ? '' : 'hidden'}>\n            <h1>your knowledge on plants is: {((this.state.score/this.state.quizz.length)*100).toFixed(2)}%</h1>\n            <img className=\"finalImg\" src = {this.displayPlants((this.state.score/this.state.quizz.length)*100)}/>\n            <button className=\"answerBtn\" onClick = {this.handleReset}>Reset</button>\n        </div>\n      </div>\n\n    )\n  }\n\n}\n\n\nexport default Quiz1;\n","let qBank = [{\n  question: \"I am calm and collected\",\n  answers: [\"Yes\", \"No\"],\n  correct: \"Yes\",\n  questionID: \"1\"\n},\n\n{\n  question: \"I love meeting new people\",\n  answers: [\"Yes\", \"No\"],\n  correct: \"No\",\n  questionID: \"2\"\n},\n\n{\n  question: \"I like when others touch me\",\n  answers: [\"Yes\", \"No\"],\n  correct: \"No\",\n  questionID: \"3\"\n},\n\n{\n  question: \"I hate sunbathing\",\n  answers: [\"Yes\", \"No\" ],\n  correct: \"No\",\n  questionID: \"4\"\n\n},\n\n{\n  question: \"I \",\n  answers: [\"Hooker's Bum\", \"Hooker's Lips\", \"Lips of an angel\", \"Bubblebe Bum\"],\n  correct: \"Hooker's Lips\",\n  questionID: \"5\"\n},\n\n{\n  question: \"One of the below is the name of the flower\",\n  answers: [\"Hooker's Bum\", \"Hooker's Lips\", \"Lips of an angel\", \"Bubblebe Bum\"],\n  correct: \"Hooker's Lips\",\n  questionID: \"6\"\n}\n\n];\n//pich random 4 questions\nexport default (n = 4) =>\nPromise.resolve(qBank.sort(() => 0.5 - Math.random()).slice(0, n));\n","import React, { useState } from 'react';\n\nconst QuestionBox = ({ question, options, selected }) => {\n  const [answer, setAnswer] = useState(options);\n  //setanswer refers to a function that can be used to update the value of the answer variable. With this in place, I will use the map function on the answer variable to render a series of buttons\n  return (\n    <div className=\"questionBox\">\n    <div className=\"question\"> {question} </div>\n    {answer.map((text, index) => (\n      <button key={index} className=\"answerBtn\" onClick={()=> {\n        setAnswer([text]);\n        selected(text);\n      }}\n        >\n        {text}\n      </button>\n    ))}\n    </div>\n  );\n}\n\nexport default QuestionBox;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'cloudinary-react';\nimport axios from 'axios';\nimport serverURL from \"../ServerURL\";\n\nconst SERVER_URL = serverURL('plants.json');\n\n\nclass PlantContainer extends Component {\n  constructor() {\n      super();\n      this.state={\n        plants : [],\n\n      };\n\n    const fetchingPlants =() => {\n      axios.get(SERVER_URL).then((result) => {\n\n        this.setState({plants: result.data[0]});\n        console.log(result.data);\n\n\n      });\n    };\n    fetchingPlants();\n\n  }\n\n  render(){\n    return(\n\n      <div>\n        {\n        <p key={this.state.plants.id}> Your spirit plant is:\n             {this.state.plants.name} </p>}\n             <Link to={ \"/plants/58\" }>\n             <Image cloudName=\"dto4pzoz6\" publicId={this.state.plants.images} width=\"300\" className=\"allPlantsShow\" />\n             </Link>\n      </div>\n    )\n  }\n}\n\nconst Result = ({ score, playAgain}) => (\n  <div className=\"score-board\">\n  <div className=\"score\"> You scored {score} / 4 </div>\n  <button className=\"playBtn\" onClick={playAgain}>\n  Play Again!\n  </button>\n  <PlantContainer />\n</div>\n);\n\nexport default Result;\n","import React, { Component } from 'react';\nimport ReactDOM from \"react-dom\";\nimport quizService from \"../quizService\";\nimport QuestionBox from \"./QuestionBox\";\nimport serverURL from \"../ServerURL\";\nimport Result from \"./Result\";\n\nclass Quiz extends Component {\n  state = {\n    questionBank: [],\n    score: 0,\n    responses: 0,\n    \n  };\n\n//invokes quizzService API and proceeds to populate the questionBank state variable with the results.\n\n\n\n  break;\n\n\n\n\ngetQuestions = () =>{\n  quizService().then(question => {\n    this.setState({\n      questionBank: question\n    });\n  });\n};\n\n\ncomputeAnswer = (answer, correctAnswer) => {\n  if (answer === correctAnswer) {\nthis.setState({\n  score: this.state.score + 1\n    });\n  }\n  this.setState({\n    responses: this.state.responses < 4 ? this.state.responses + 1 : 5\n  });\n};\n\nplayAgain = () => {\nthis.getQuestions();\nthis.setState({\n  score: 0,\n  responses: 0\n    });\n  };\n\n//we used the componentDidMount lifecycle method to bring in a set of question objects from our API and we populated a state variable with this data. We then render the question text from this data in our JSX template\ncomponentDidMount() {\n  this.getQuestions();\n}\n\n  render() {\n    return (\n      <div className=\"container\">\n\n      <div className=\"title\"> Quiz </div>\n        {this.state.questionBank.length > 0 && this.state.responses < 4 && this.state.questionBank.map(({question, answers, correct, questionID}) => (<QuestionBox question={question} options={answers} key={questionID} selected={answer => this.computeAnswer(answer, correct)}/>\n        )\n      )}\n\n      {this.state.responses === 4 ? (<Result score={this.state.score} playAgain={this.playAgain} />) : null }\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Quiz />, document.getElementById(\"root\"));\n\nexport default Quiz;\n","import React, { Component } from 'react';\n\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Image } from 'cloudinary-react';\nimport serverURL from \"../ServerURL\";\n\nconst SERVER_URL = serverURL('plants/58.json');\n\nclass Quiztest extends React.Component {\n  constructor(){\n    super()\n    this.state={\n      data:[\n        {\n          question: \"Do you prefer a cosy night in or an adventourous night out?\",\n          options: [\"A cosy night in\", \"Adventourous night out\"],\n          answer:'A cosy night in' },\n          {\n            question: \"Which season do you prefer?\",\n            options: [\"Summer\", \"Winter\"],\n            answer:'Summer' },\n            {\n              question: \"Which of the following do you thing better suit you?\",\n              options: [\"Charming\", \"Misterious\"],\n              answer:'Misterious' },\n        {\n          question:\"Do you like standing out from the crowd?\",\n          options:[\"Yes\", \"No\"],\n          answer:'Yes'},\n        {\n            question:\"Do you like cuddles?\",\n            options:[\"Yes\", \"No\"],\n            answer:'No'}\n\n      ],\n      count:0,\n      correct:0,\n      inCorrect:0,\n      plantName2: \"Venus Flytrap\",\n      plantName1: \"Maranta\",\n      plants: []\n    }\n\n    this.whatPlant=this.whatPlant.bind(this);\n  }\n  handleResult=(isCorrect)=>{\n    if(isCorrect){\n      this.setState((prevState)=>({\n      correct:prevState.correct+1,\n      count:prevState.count+1\n    }))\n    }else{\n      this.setState((prevState)=>({\n      inCorrect:prevState.inCorrect+1,\n      count:prevState.count+1\n    }))\n  }\n\n  const fetchingPlants =() => {\n    axios.get(SERVER_URL).then((result) => {\n\n      this.setState({plants: result.data});\n      console.log(result.data);\n    });\n  };\n  fetchingPlants();\n}\n\nwhatPlant() {\n     if ((this.state.correct===3) && (this.state.count === 5)) {\n       return <p> Your spirit plant is : {this.state.plantName1} . You are protective, friendly, and people can count on you to get things done! </p>;\n\n    }\n    else if ((this.state.correct===2) && (this.state.count === 5)){\n      return <div> Your spirit plant is :{this.state.plantName2} You're known for being misterious, extremely clever, and a bit shy, too!\n        <Link to={ \"/plants/58\" }>\n        <Image cloudName=\"dto4pzoz6\" publicId={this.state.plants.images} width=\"300\" className=\"allPlantsShow\" />\n        </Link>\n\n       </div> ;\n    }\n    else if ((this.state.correct===4) && (this.state.count === 5)){\n      return <h1> You are a lotus flower! You're beautiful inside and out and known to be quite charismatic and wise! </h1> ;\n\n    }\n    else {\n      return\n    }\n\n\n}\n\n  render(){\n  return(\n    <div>\n      {(this.state.count<5) && <Layout\n        question={this.state.data[this.state.count].question}\n        options={this.state.data[this.state.count].options}\n        answer={this.state.data[this.state.count].answer}\n        correct={this.state.correct}\n        inCorrect={this.state.inCorrect}\n        handleResult={this.handleResult} />}\n\n\n    {this.whatPlant()}\n      <h2>Correct:{this.state.correct}</h2>\n      <h2>InCorrect:{this.state.inCorrect}</h2>\n\n\n    </div>\n  )\n}\n}\nclass Layout extends React.Component{\n  constructor(props){\n    super(props)\n  }\n  handleClick = (e) =>{\n    if(e.target.value===this.props.answer){\n      this.props.handleResult(true)\n    }else{\n      this.props.handleResult(false)\n    }\n  }\n  render (props){\n  return(\n  <div>\n      <h2>{this.props.question}</h2>\n      {\n        this.props.options.map(option=>{\n          return <button onClick={(this.handleClick)} value={option}>{option}</button>\n        })\n      }\n  </div>\n  )\n}\n}\n\n\nexport default Quiztest;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport './style/style.css';\n\nimport Home from './components/Home';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\nimport SignOut from './components/SignOut';\nimport PlantContainer from './components/PlantContainer';\nimport CreatePlant from './components/CreatePlant';\nimport EditPlant from './components/EditPlant';\nimport UserProfile from './components/UserProfile';\nimport Users from './components/Users';\nimport Bookings from './components/Bookings';\nimport PlantInfo from './components/PlantInfo';\nimport Quiz1 from './components/Quiz1';\nimport Quiz from './components/Quiz';\nimport Quiztest from './components/Quiztest';\n\n\n\n// TODO: make Header refresh like the rest of the pages. e.g. when you logout it wont refresh the navbar automatically.\nconst Routes = (\n    <Router>\n\n      <Header />\n        <div className=\"wrapper\">\n        <div>\n        <Switch>\n          <Route exact path=\"/\" component= { Home } />\n          <Route exact path=\"/plants\" component= { PlantContainer } />\n          <Route exact path=\"/plants/new\" component= { CreatePlant } />\n          <Route exact path=\"/plants/:id\" component={ PlantInfo } />\n          <Route exact path=\"/plants/:id/edit\" component= { EditPlant } />\n          <Route exact path=\"/users/:id\" component= { UserProfile } />\n          <Route exact path=\"/users\" component= { Users } />\n          <Route exact path=\"/bookings\" component= { Bookings } />\n          <Route exact path=\"/quiz1\" component= { Quiz1 } />\n          <Route exact path=\"/quiz\" component= { Quiz } />\n            <Route exact path=\"/quiztest\" component= { Quiztest } />\n          <Route exact path=\"/SignUp\" component= { SignUp } />\n          { localStorage.getItem(\"jwt\") ?\n              <Route exact path=\"/SignOut\" component= { SignOut } />\n              :\n              <Route exact path=\"/SignIn\" component= { SignIn } />\n          }\n        </Switch>\n        </div>\n        </div>\n        <Footer />\n\n    </Router>\n)\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(Routes , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/boy-1.8547ceae.svg\";","module.exports = __webpack_public_path__ + \"static/media/boy.eae74d36.svg\";","module.exports = __webpack_public_path__ + \"static/media/girl-1.038dbd32.svg\";","module.exports = __webpack_public_path__ + \"static/media/girl.cd63945d.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-1.dabcdaa2.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-2.333fa0cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-3.fcfc134f.svg\";","module.exports = __webpack_public_path__ + \"static/media/man-4.bef3aabb.svg\";","module.exports = __webpack_public_path__ + \"static/media/man.93ef09bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/leaf_dark.173f02d7.png\";","module.exports = __webpack_public_path__ + \"static/media/leaf_green.0ed838a1.png\";"],"sourceRoot":""}